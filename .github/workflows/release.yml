name: Publish release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version number'
        required: true

jobs:
  build:
    if: contains('["chrispyles"]', github.actor)

    runs-on: ubuntu-latest

    steps:
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Only allow releases off of main
        run: |
          python3 -c 'import os, sys; sys.exit(os.environ["GITHUB_REF"] != "refs/heads/main")'

      - uses: actions/checkout@v2

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false

      - name: Update version
        run: |
          echo '__version__ = "${{ github.event.inputs.version }}"' > fica/version.py
          poetry version ${{ github.event.inputs.version }}

      - name: Commit and push
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add fica/version.py
          git commit -m 'release v${{ github.event.inputs.version }}'
          git push --set-upstream origin release

      - name: Create dist and push to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry build
          python3 -m twine upload dist/*

      - name: Create a release on GitHub
        env:
          GITHUB_USER: ${{ secrets.GITHUB_USER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            gh release create \
              --title 'v${{ github.event.inputs.version }}' \
              --target release \
              'v${{ github.event.inputs.version }}' \
              dist/*.tar.gz \
              dist/*.whl

      - name: Create a latest tag
        run: |
          git tag -f latest
          git push --force origin latest

      - name: PR release -> main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --repo chrispyles/fica \
            --base main \
            --head chrispyles:release \
            --label "release" \
            --reviewer chrispyles \
            --milestone "v${{ github.event.inputs.version }}" \
            --title "Release v${{ github.event.inputs.version }}" \
            --body "Updates from the release of version ${{ github.event.inputs.version }}"
